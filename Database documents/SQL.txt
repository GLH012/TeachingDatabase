SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS staff;
DROP TABLE IF EXISTS Qualification;
DROP TABLE IF EXISTS AQFLevels;  
DROP TABLE IF EXISTS Organisation; 
DROP TABLE IF EXISTS Roles;
DROP TABLE IF EXISTS Courses;
DROP TABLE IF EXISTS Work;  
DROP TABLE IF EXISTS Relevant_Teaching_Experience;
DROP TABLE IF EXISTS Relevant_Employment_Experience;
DROP TABLE IF EXISTS Journal;
DROP TABLE IF EXISTS Publications;
DROP TABLE IF EXISTS Admin_Manager; 
DROP TABLE IF EXISTS Approvals;
DROP TABLE IF EXISTS Documents;  
DROP TABLE IF EXISTS Reviews;
DROP TABLE IF EXISTS Reviewer_Notes;  

SET FOREIGN_KEY_CHECKS = 1;

CREATE TABLE IF NOT EXISTS Staff (
  StaffID    int(10) NOT NULL AUTO_INCREMENT, 
  Title      varchar(5) NOT NULL, 
  First_Name varchar(128) NOT NULL, 
  Last_Name  varchar(128) NOT NULL, 
  EmailId    varchar(128) NOT NULL UNIQUE, 
  Address    varchar(128), 
  PhoneNo    varchar(22) NOT NULL UNIQUE,
  Archive    boolean,
  PRIMARY KEY (StaffID));

CREATE TABLE IF NOT EXISTS Qualification (
  NameOfQualification varchar(255) NOT NULL, 
  StaffID             int(10) NOT NULL, 
  AQFLevel_ID         int(10) NOT NULL, 
  Subject_Area        varchar(255) NOT NULL, 
  Institution_Name    varchar(255) NOT NULL, 
  Institution_Country varchar(255) NOT NULL, 
  Full_Name_Of_Award  varchar(255), 
  Awarded_Year        date);

 
CREATE TABLE IF NOT EXISTS AQFLevels (
  AQFLevel_ID                           int(10) NOT NULL AUTO_INCREMENT, 
  Qualified_Degree                      varchar(255) NOT NULL,
  AQFLevel                              varchar(20) NOT NULL,  
  Qualification_Level_Required_To_Teach varchar(20) NOT NULL,  
  PRIMARY KEY (AQFLevel_ID));

CREATE TABLE IF NOT EXISTS Organisation (
  Organisation_ID int(10) NOT NULL AUTO_INCREMENT, 
  Name            varchar(255) NOT NULL UNIQUE, 
  Org_Address     varchar(128) NOT NULL, 
  PRIMARY KEY (Organisation_ID));

CREATE TABLE IF NOT EXISTS Roles (
  Role_ID   int(10) NOT NULL AUTO_INCREMENT, 
  Role_Name varchar(125) NOT NULL UNIQUE, 
  PRIMARY KEY (Role_ID));

CREATE TABLE IF NOT EXISTS Courses (
  Course_ID   int(10) NOT NULL AUTO_INCREMENT, 
  Course_Name varchar(128) NOT NULL, 
  PRIMARY KEY (Course_ID));

CREATE TABLE IF NOT EXISTS Work (
  Work_ID     int(10) NOT NULL AUTO_INCREMENT, 
  Work_Status varchar(20) NOT NULL UNIQUE, 
  PRIMARY KEY (Work_ID));

CREATE TABLE IF NOT EXISTS Relevant_Teaching_Experience (
  StaffID         int(10) NOT NULL, 
  Joining_Date    date, 
  Finish_Date     date NOT NULL, 
  Course_ID       int(10) NOT NULL, 
  Organisation_ID int(10) NOT NULL, 
  Role_ID         int(10) NOT NULL);

CREATE TABLE IF NOT EXISTS Relevant_Employment_Experience (
  StaffID         int(10) NOT NULL, 
  Joining_Date    date NOT NULL, 
  Finish_Date     date NOT NULL, 
  Organisation_ID int(10) NOT NULL, 
  Work_ID         int(10) NOT NULL, 
  Role_ID         int(10) NOT NULL);

CREATE TABLE IF NOT EXISTS Journal (
  Journal_ID     int(11) NOT NULL AUTO_INCREMENT, 
  Journal_Volume varchar(255), 
  PRIMARY KEY (Journal_ID));

CREATE TABLE IF NOT EXISTS Publications (
  Publication_ID        int(10) NOT NULL AUTO_INCREMENT, 
  Year_Of_Publication   int(10) NOT NULL, 
  Title_Of_Publication  varchar(128) NOT NULL, 
  Journal_ID            int(11) NOT NULL, 
  Type_Of_Publication   varchar(128) NOT NULL, 
  Peer_Reviewed         varchar(5) NOT NULL, 
  Classification        varchar(50) NOT NULL, 
  StaffID               int(10) NOT NULL, 
  Broad_Field_Education varchar(10) NOT NULL, 
  PRIMARY KEY (Publication_ID));

CREATE TABLE IF NOT EXISTS Admin_Manager (
  Manager_Id int(10) NOT NULL AUTO_INCREMENT, 
  StaffID    int(10) NOT NULL, 
  PRIMARY KEY (Manager_Id));

CREATE TABLE IF NOT EXISTS Approvals (
  Approval_Id       int(10) NOT NULL AUTO_INCREMENT, 
  Next_Revw_Date       date, 
  Approval_Date     date NOT NULL, 
  Teaching_Location varchar(50) NOT NULL, 
  AQFLevel_ID       int(10) NOT NULL, 
  Admin_Mgr_ID      int(10) NOT NULL, 
  StaffID           int(10) NOT NULL, 
  CourseID          int(10) NOT NULL, 
  PRIMARY KEY (Approval_Id));

CREATE TABLE IF NOT EXISTS Documents (
  Doc_ID           int(10) NOT NULL AUTO_INCREMENT, 
  Doc_Name         varchar(120) NOT NULL, 
  Doc_Sighted_Date date NOT NULL, 
  StaffID          int(10) NOT NULL, 
  Admin_Mgr_ID     int(10) NOT NULL, 
  PRIMARY KEY (Doc_ID));

CREATE TABLE IF NOT EXISTS Reviews (
  Review_ID    int(10) NOT NULL AUTO_INCREMENT, 
  Review_Date  date NOT NULL, 
  Admin_mgr_ID int(10) NOT NULL, 
  OutCome      varchar(50) NOT NULL, 
  StaffID      int(10) NOT NULL, 
  PRIMARY KEY (Review_ID));

CREATE TABLE IF NOT EXISTS Reviewer_Notes (
  ID           int(10) NOT NULL AUTO_INCREMENT, 
  Content      varchar(255) NOT NULL, 
  Admin_Mgr_ID int(10) NOT NULL, 
  Review_ID    int(10) NOT NULL, 
  PRIMARY KEY (ID));

/* INSERT RECORDS into staff Table*/
 insert into staff(Title, First_Name, Last_Name, EmailId, Address,PhoneNo) values('Mr','Thiru','Paleru','rao.paleti@gmail.com','162 ANAND Street AMARAVATHI, ANDHRAPRADESH 522020 INDIA',9701785385);
 insert into staff(Title, First_Name, Last_Name, EmailId, Address,PhoneNo) values('Mr','Venki','ch','venki.ch@gmail.com','121 EAT Street GUNTUR, ANDHRAPRADESH 522012 INDIA',469710653);
 insert into staff(Title, First_Name, Last_Name, EmailId, Address,PhoneNo) values('Miss','lalitha','vadlamudi','lalli.vadlamudi@gmail.com','262 State Street VIJAYAWADA, ANDHRAPRADESH 522123 INDIA',9052385385);
 insert into staff(Title, First_Name, Last_Name, EmailId, Address,PhoneNo) values('Mr','Alex','John','alex.john@gmail.com','111, 2 Boonah Qld CLARENDON, Queensland 4311 AUSTRALIA',458600542);
 insert into staff(Title, First_Name, Last_Name, EmailId, Address,PhoneNo) values('Ms','Jennie','peter','jennie.peter@gmail.com','222, 26  Bathurst Road PERTHVILLE, New South Wales 2795 AUSTRALIA',987456123);
 
			 

/* INSERT RECORDS into AQFLevels TABLE */
insert into AQFLevels(Qualified_Degree, AQFLevel,Qualification_Level_Required_To_Teach)
               values('Bachelor degree','Level 7','LEVEL 8');

insert into AQFLevels(Qualified_Degree, AQFLevel,Qualification_Level_Required_To_Teach)
               values('Bachelor Honours degree','Level 8','LEVEL 9');

insert into AQFLevels(Qualified_Degree, AQFLevel,Qualification_Level_Required_To_Teach)
               values('Graduate Certificate','Level 8','LEVEL 9');

insert into AQFLevels(Qualified_Degree, AQFLevel,Qualification_Level_Required_To_Teach)
               values('Graduate Diploma','Level 8','LEVEL 9');

insert into AQFLevels(Qualified_Degree, AQFLevel,Qualification_Level_Required_To_Teach)
               values('Masters','Level 9','LEVEL 10');
			   
insert into AQFLevels(Qualified_Degree, AQFLevel,Qualification_Level_Required_To_Teach)
               values('PhD','Level 10','LEVEL 10');

/* INSERT RECORDS into Qualification TABLE */
insert into Qualification(NameOfQualification,StaffID,AQFLevel_ID,Subject_Area, Institution_Name, Institution_Country, Full_Name_Of_Award, Awarded_Year)
               values('Masters of Computer Apps', 1, 5, 'Computer Applications', 'NATIONAL INSTITUTE', 'INDIA', 'Best Masters Thesis', '2008-01-01');

insert into Qualification(NameOfQualification,StaffID,AQFLevel_ID,Subject_Area, Institution_Name, Institution_Country, Full_Name_Of_Award, Awarded_Year)
               values('Bachelor degree', 2, 1, 'Electronic Communications', 'IIIT', 'INDIA', 'Best Bachelor thesis', '2013-01-01');
			   
insert into Qualification(NameOfQualification,StaffID,AQFLevel_ID,Subject_Area, Institution_Name, Institution_Country, Full_Name_Of_Award, Awarded_Year)
               values('Phd In Pharmacy', 3, 6, 'CEUTHICS', 'ANDHRA UNIVERSITY', 'INDIA', 'Excellence award', '2012-01-01');
			   
insert into Qualification(NameOfQualification,StaffID,AQFLevel_ID,Subject_Area, Institution_Name, Institution_Country, Full_Name_Of_Award, Awarded_Year)
               values('Bachelor of commerce Degree', 4, 1, 'Accounts', 'JNTU', 'INDIA', NULL, NULL);
			   
insert into Qualification(NameOfQualification,StaffID,AQFLevel_ID,Subject_Area, Institution_Name, Institution_Country, Full_Name_Of_Award, Awarded_Year)
               values('Bachelor of Management', 5, 3, 'HR', 'ANU', 'INDIA', NULL, NULL);

/* Organisation TABLE */
insert into Organisation(Name,Org_Address) 
		values('SDCIT','SD Buildings, 333 TT Road Hyderabad, TELANGANA 56789 INDIA'),
			('PNCKR','LODHA Heights, 444 RTO ROAD Hyderabad, TELANGANA 56889 INDIA'),
			('NEC','INCOR Heights, 555 HITEX ROAD Hyderabad, TELANGANA 56999 INDIA'),
			('PBS','VBIT PARK, 666 INORBIT MALL ROAD Hyderabad, TELANGANA 54321 INDIA'),
			('TGFI','MIND SPACE, 777 Hitech City Road Hyderabad, TELANGANA 54893 INDIA');

insert into Courses(Course_Name) values ('Database internals'),('Electronic Communications'),('CEUTHICS'),('Accountant'),('Staff Management');
insert into Roles(Role_Name) values ('Course coordinator'),('lecturer'),('tutor'),('instructor'),('teaching assistant'),('Marker'),('facilitator');
insert into work(Work_Status) values ('Full-Time'),('Part-Time');

insert into Relevant_Teaching_Experience 
            (StaffID, Joining_Date, Finish_Date, Course_ID, Organisation_ID, Role_ID)
            values(1, '2010-08-01', '2015-01-01',1,1,1),
			      (2, '2012-01-01', '2016-01-01',2,3,5),
				  (3, '2013-01-01', '2017-01-01',3,4,2);
				  

insert into Relevant_Employment_Experience
            (StaffID,Joining_Date, Finish_Date ,Organisation_ID, Work_ID,  Role_ID)
            values (4, '2010-01-01', '2018-01-01', 5,1,7),
			       (5, '2018-01-01', '2018-10-10', 2,2,1);

insert into journal(Journal_Volume) values ('Journal'),('Conference proceedings'),('books'),('book chapters');

insert into Publications(Year_Of_Publication,Title_Of_Publication,Journal_id,
                         Type_Of_Publication,Peer_Reviewed, Classification,StaffID,Broad_Field_Education)
				 values (2014,'The Quick learn python',3,'Book chapter','YES','Scholarship',1,'MCA'),
				        (2016,'Advanced Drug Delivery Reviews',1,'Journal article', 'NO', 'Research', 3, 'M pharmacy');

INSERT INTO Admin_Manager (StaffID) VALUES ( 1), (5);

INSERT INTO Approvals (Approval_Date, Next_Revw_Date, Teaching_Location,AQFLevel_ID, Admin_Mgr_ID, StaffID,CourseID)
               values ('2018-10-01',NULL,'Hyderabad',5,2,1,1),
			          ('2018-08-15',NULL,'Hyderabad',6,2,3,3);

INSERT INTO Documents (Doc_Name,Doc_Sighted_Date,staffID,Admin_Mgr_ID)
                 values ('Certificates','2018-02-02',1,2),
				        ('Experience certificate','2018-03-03',3,2);

INSERT INTO  Reviews ( Review_Date,Admin_mgr_ID,OutCome, StaffID) 
                VALUES ('2018-08-15', 2, 'Continue', 3),			
                       ('2018-10-01', 2, 'Warning',  1),
					   ('2018-01-01', 1, 'TERMINATE',2);
					   

INSERT INTO Reviewer_Notes (Content,Admin_Mgr_ID, Review_ID)
                      VALUES ('The coordinator has so far been excellent at their job.', 2, 1),
					         ('The instructor continues to be late to class despite various warnings',2,2),
							 ('The Teaching assistant is terminated.',1,3);


  
ALTER TABLE Qualification ADD INDEX FKQualificat68980 (AQFLevel_ID), ADD CONSTRAINT FKQualificat68980 FOREIGN KEY (AQFLevel_ID) REFERENCES AQFLevels (AQFLevel_ID);
ALTER TABLE Relevant_Teaching_Experience ADD INDEX FKRelevant_T99864 (Organisation_ID), ADD CONSTRAINT FKRelevant_T99864 FOREIGN KEY (Organisation_ID) REFERENCES Organisation (Organisation_ID);
ALTER TABLE Relevant_Teaching_Experience ADD INDEX FKRelevant_T815845 (Role_ID), ADD CONSTRAINT FKRelevant_T815845 FOREIGN KEY (Role_ID) REFERENCES Roles (Role_ID);
ALTER TABLE Relevant_Teaching_Experience ADD INDEX FKRelevant_T37334 (StaffID), ADD CONSTRAINT FKRelevant_T37334 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Relevant_Employment_Experience ADD INDEX FKRelevant_E879153 (StaffID), ADD CONSTRAINT FKRelevant_E879153 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Relevant_Teaching_Experience ADD INDEX FKRelevant_T164776 (Course_ID), ADD CONSTRAINT FKRelevant_T164776 FOREIGN KEY (Course_ID) REFERENCES Courses (Course_ID);
ALTER TABLE Relevant_Employment_Experience ADD INDEX FKRelevant_E895810 (Work_ID), ADD CONSTRAINT FKRelevant_E895810 FOREIGN KEY (Work_ID) REFERENCES Work (Work_ID);
ALTER TABLE Relevant_Employment_Experience ADD INDEX FKRelevant_E58316 (Organisation_ID), ADD CONSTRAINT FKRelevant_E58316 FOREIGN KEY (Organisation_ID) REFERENCES Organisation (Organisation_ID);
ALTER TABLE Publications ADD INDEX FKPublicatio565478 (StaffID), ADD CONSTRAINT FKPublicatio565478 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Admin_Manager ADD INDEX FKAdmin_Mana168093 (StaffID), ADD CONSTRAINT FKAdmin_Mana168093 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Approvals ADD INDEX FKApprovals847966 (AQFLevel_ID), ADD CONSTRAINT FKApprovals847966 FOREIGN KEY (AQFLevel_ID) REFERENCES AQFLevels (AQFLevel_ID);
ALTER TABLE Approvals ADD INDEX FKApprovals281428 (Admin_Mgr_ID), ADD CONSTRAINT FKApprovals281428 FOREIGN KEY (Admin_Mgr_ID) REFERENCES Admin_Manager (Manager_Id);
ALTER TABLE Approvals ADD INDEX FKApprovals572462 (CourseID), ADD CONSTRAINT FKApprovals572462 FOREIGN KEY (CourseID) REFERENCES Courses (Course_ID);
ALTER TABLE Approvals ADD INDEX FKApprovals753919 (StaffID), ADD CONSTRAINT FKApprovals753919 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Documents ADD INDEX FKDocuments383035 (Admin_Mgr_ID), ADD CONSTRAINT FKDocuments383035 FOREIGN KEY (Admin_Mgr_ID) REFERENCES Admin_Manager (Manager_Id);
ALTER TABLE Documents ADD INDEX FKDocuments61047 (StaffID), ADD CONSTRAINT FKDocuments61047 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Reviews ADD INDEX FKReviews965706 (StaffID), ADD CONSTRAINT FKReviews965706 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Reviewer_Notes ADD INDEX FKReviewer_N235512 (Admin_Mgr_ID), ADD CONSTRAINT FKReviewer_N235512 FOREIGN KEY (Admin_Mgr_ID) REFERENCES Admin_Manager (Manager_Id);
ALTER TABLE Reviewer_Notes ADD INDEX FKReviewer_N39960 (Review_ID), ADD CONSTRAINT FKReviewer_N39960 FOREIGN KEY (Review_ID) REFERENCES Reviews (Review_ID);

ALTER TABLE Qualification ADD INDEX FKQualificat974932 (StaffID), ADD CONSTRAINT FKQualificat974932 FOREIGN KEY (StaffID) REFERENCES Staff (StaffID);
ALTER TABLE Relevant_Employment_Experience ADD INDEX FKRelevant_E974025 (Role_ID), ADD CONSTRAINT FKRelevant_E974025 FOREIGN KEY (Role_ID) REFERENCES Roles (Role_ID);


ALTER TABLE Publications ADD INDEX FKPublicatio439716 (Journal_ID), ADD CONSTRAINT FKPublicatio439716 FOREIGN KEY (Journal_ID) REFERENCES Journal (Journal_ID);

/* CREATE TRIGGER */
CREATE TRIGGER update_date_in_review_tbl BEFORE INSERT ON Approvals FOR EACH ROW SET new.next_revw_date = DATE_ADD(new.Approval_Date, INTERVAL 1 YEAR);

/* INDEX creation on staff and approvals table */
CREATE INDEX staff_idx_staffid ON staff (staffID);
CREATE INDEX staff_idx_title_first_name_last_name ON staff (title, first_name, last_name);
CREATE INDEX approval_idx_approval_date ON approvals (approval_date);
CREATE INDEX approval_idx_approval_date_next_revw_date ON approvals (approval_date, next_revw_date);

/* SELECT statements */
select s.staffid,s.title,concat(First_name,' ',last_name) as Name,Q.HighestQualification from
staff s
INNER JOIN
(select qua.staffid as SID, 
        qua.NameOfQualification as HighestQualification,
		qua.AQFLevel_ID as LevelID from qualification qua, aqflevels aql 
		where aql.AQFLevel = 'Level 10' and aql.AQFLevel_ID =  qua.AQFLevel_ID
) Q
on Q.SID = s.staffid order by s.last_name;

select s.staffid,s.title,concat(First_name,' ',last_name) as Name, revw_res.feedback from
staff s
INNER JOIN
(select rn.Content as feedback, revw.staffID as sid from Reviewer_Notes rn, Reviews revw 
 where revw.Review_ID=rn.Review_ID and revw.outcome='terminate') revw_res
 ON revw_res.sid = s.staffid;
 
 
 select Title, First_Name, Last_Name, EmailId, Address, PhoneNo 
 from 
 staff 
 INNER JOIN
 Relevant_Employment_Experience
 ON Relevant_Employment_Experience.STAFFID = staff.STAFFID;
 
 
SELECT aqflevels.AQFLevel, COUNT(qualification.AQFLevel_ID) AS 'total staff'
FROM aqflevels 
INNER JOIN qualification ON aqflevels.AQFLevel_ID = qualification.AQFLevel_ID
GROUP BY aqflevels.AQFLevel;

