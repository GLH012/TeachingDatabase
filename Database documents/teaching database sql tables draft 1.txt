# Teaching Database
# SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS STAFF;
DROP TABLE IF EXISTS TEACHING_EXPERIENCE;
DROP TABLE IF EXISTS AQF_LEVELS;
DROP TABLE IF EXISTS QUALIFICATION;
DROP TABLE IF EXISTS APPROVAL_ID;
DROP TABLE IF EXISTS ADDITIONAL_NOTES;

# SET FOREIGN_KEY_CHECKS = 1

CREATE TABLE IF NOT EXISTS STAFF (
STAFF_ID VARCHAR (15),
FIRST_NAME VARCHAR (50),
LAST_NAME VARCHAR (50),
ADDRESS VARCHAR (50),
EMAIL VARCHAR (50),
PHONE_NO (11),
ADMIN (BOOLEAN),
PRIMARY KEY (STAFF_ID));

CREATE TABLE IF NOT EXISTS TEACHING_EXPERIENCE (
STAFF_ID VARCHAR (15),
TEACHING_PERIOD VARCHAR (50),
TEACHING_DUTY VARCHAR (50),
COURSE_TITLE VARCHAR (70),
INSTITUTION_NAME VARCHAR (50),
INSTITUTION-ADDRESS VARCHAR (70),
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID));

CREATE TABLE IF NOT EXISTS AQF_LEVELS (
AQF_ID VARCHAR (10),
STUDY_LEVEL INT,
QUALIFICATION (50),
LEVEL_TO_TEACH INT,
PRIMARY KEY (AQF_ID));

CREATE TABLE IF NOT EXISTS QUALIFICATION (
QUAL_ID VARCHAR (15),
STAFF_ID VARCHAR (15),
AQF_ID VARCHAR (15),
QUAL_TITLE VARCHAR (70),
QUAL_YEAR DATE,                                 --DATE?
PRIMARY KEY (QUAL_ID)
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
FOREIGN KEY (AQF_ID) REFERENCES AQF_LEVELS(AQF_ID));

CREATE TABLE IF NOT EXISTS APPROVAL (
APPROVAL_ID VARCHAR (15),
SATFF_ID VARCHAR (15),
LOCATION VARCHAR (50),
APPROVAL_STATUS VARCHAR (10),
APPROVAL_DATE DATE,
APPROVED_BY VARCHAR (50),
NOTES VARCHAR (200),
PRIMARY KEY (APPROVAL_ID)
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID));

CREATE TABLE IF NOT EXISTS ADDITIONAL_NOTES (
STAFF_ID VARCHAR (15),
A_NOTES VARCHAR (200),
RECORDED_BY VARCHAR (50),
RECORDED_DATE DATE,
FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID));


